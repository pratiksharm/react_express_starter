{"version":3,"sources":["components/Editor.js","contexts/AppReducer.js","contexts/globalcontext.js","components/Form.js","contexts/AuthReducer.js","contexts/AuthContext.js","Views/Login.js","Views/Timeline.js","Views/Analysis.js","Views/WriteOn.js","Views/Dashboard.js","contexts/ApolloCient.js","Nav.js","components/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["defaultValue","localStorage","getItem","FunctionMarkdownEditor","props","useState","word","setWord","cleanWord","setCleanWord","readOnly","setreadonly","template","setTemplate","dark","setDark","undefined","value","setValue","handleChange","debounce","text","console","log","setItem","body","document","style","backgroundColor","type","onClick","readonly","existing","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","data","removeMd","stripListLeaders","listUnicodeChar","gfm","useImgAltText","toLowerCase","replace","rightwords","_","words","keywords","difference","stopWords","keywordsCount","countBy","id","readOnlyWriteCheckboxes","scrollTo","window","location","hash","handleDOMEvents","focus","blur","paste","touchstart","onSave","options","onCancel","onChange","onClickLink","href","event","onHoverLink","target","onClickHashtag","tag","onSearchLink","term","a","Promise","resolve","setTimeout","docSearchResults","filter","result","title","includes","Math","random","autoFocus","AppReducer","state","action","journalList","journal","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","deleteJournal","addJournal","UPDATE_JOURNAL","gql","Form","cleanword","count","setCount","dayjs","userProfile","JSON","parse","length","useMutation","updateJournal","googleId","useContext","useEffect","variables","content","completed","display","flexDirection","justifyContent","className","textValue","flexWrap","AuthReducer","stringify","user","token","isLoggedIn","clear","AuthContext","AuthProvider","UserLogin","userdata","UserLogOut","GOOGLE_CLIENT_ID","process","REACT_APP_GOOGLE_CLIENT_ID","ADD_USER","LoginPage","history","useHistory","updateUser","responseSuccessGoogle","response","newUser","tokenId","profileObj","displayName","name","firstName","givenName","lastName","familyName","image","imageUrl","push","LoggedIn","to","clientId","buttonText","onSuccess","onFailure","res","cookiePolicy","GET_JOURNAL_BY_USER","Timeline","editor","userAccount","useQuery","loading","error","message","table","quarter","earnings","Analysis","height","domainPadding","theme","VictoryTheme","material","tickValues","tickFormat","dependentAxis","x","y","Component","WriteOn","map","index","ADD_JOURNAL","Dashboard","userinfo","userName","mutationData","AddJournal","onLogoutSuccess","src","alt","journalsByuser","date","createdAt","format","client","ApolloClient","uri","cache","InMemoryCache","NavBar","Nav","direction","background","pad","border","Anchor","icon","hoverIndicator","Home","Notification","Analytics","Footer","App","Grommet","exact","path","Login","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","getElementById","URL","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f979d448.chunk.js","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport Editor from 'rich-markdown-editor';\r\nimport {debounce} from 'lodash-es';\r\nimport removeMd from 'remove-markdown';\r\nimport _ from 'lodash-es';\r\n\r\nimport {stopWords} from '../components/Form';\r\n\r\nconst savedText = localStorage.getItem('saved');\r\nconst exampleText = ``\r\nconst defaultValue = savedText || exampleText;\r\n\r\n\r\nconst FunctionMarkdownEditor = (props) => {\r\n  const [word, setWord] = useState(\"\" || defaultValue)\r\n  const [cleanWord, setCleanWord] = useState(\"\");\r\n  const [readOnly, setreadonly] = useState(false)\r\n  const [template, setTemplate] = useState(false)\r\n  const [dark, setDark] = useState(localStorage.getItem('dark') === \"enabled\")\r\n  const [value, setValue]= useState(undefined);\r\n\r\n\r\n  //lodash functions \r\n  \r\n\r\n  const handleToggleReadOnly = () => {\r\n    setreadonly(!readonly);\r\n  }\r\n  const handleToggleTemplate = ()  => {\r\n    setTemplate(!template);\r\n  }\r\n  const handleToggleDark = () => {\r\n    setDark(!dark)\r\n    localStorage.setItem(\"dark\", dark ? \"enabled\" : \"disabled\");\r\n  }\r\n  const fullscreeentoggle = () => {\r\n    if(!document.fullscreenElement) {\r\n      document.documentElement.requestFullscreen()\r\n    } else {\r\n      if( document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleUpdateValue = () => {\r\n    const existing = localStorage.getItem(\"saved\") || \"\";\r\n    const value = `${existing}\\n\\nedit!`;\r\n    localStorage.setItem(\"saved\", value);\r\n    setValue(value)\r\n};\r\n  const handleChange = debounce(value => {\r\n    const text = value();\r\n    console.log(text);\r\n    setWord(text);\r\n    localStorage.setItem(\"saved\", text);\r\n  }, 250);\r\n\r\n  const removingMarkdown= ()=>{\r\n    let data = removeMd(word, {\r\n            stripListLeaders: true , \r\n            listUnicodeChar: '',     \r\n            gfm: true,                \r\n            useImgAltText: true \r\n    }).toLowerCase();\r\n    data = data.replace(/(\\r\\n|\\n|\\r)/gm,\"\")\r\n    setCleanWord(data);\r\n    console.log(cleanWord)\r\n    const rightwords = _.words(cleanWord || data, /\\b[-?(\\w+)?]+\\b/gi)\r\n    const keywords = _.difference(rightwords,stopWords )\r\n    const keywordsCount = _.countBy(keywords);\r\n    console.log(data, rightwords)\r\n    console.log(keywords)\r\n    console.log(keywordsCount)\r\n  }\r\n\r\n  const { body } = document;\r\n\r\n  if (body) body.style.backgroundColor = dark ? \"#181A1B\" : \"#FFF\";\r\n  return(\r\n    <div>\r\n            <div>\r\n                <button type=\"button\" onClick={handleToggleReadOnly}>\r\n                    {readOnly ?\"Editable\" : \"Read-only\"}\r\n                </button>\r\n                <button type=\"button\" onClick={handleToggleDark}>\r\n            {dark ? \"Switch to Light\" : \"Switch to Dark\"}\r\n          </button>{\" \"}\r\n          <button type=\"button\" onClick={handleToggleTemplate}>\r\n            {template ? \"Switch to Document\" : \"Switch to Template\"}\r\n          </button>{\" \"}\r\n          <button type=\"button\" onClick={handleUpdateValue}>\r\n            Update value\r\n          </button>\r\n          <button type=\"button\" onClick={fullscreeentoggle}>\r\n            FullScreen\r\n          </button>\r\n          <button type=\"button\" onClick={removingMarkdown}>\r\n            RemoveMarkdown\r\n          </button>\r\n          <br/>\r\n            </div>\r\n            <Editor\r\n          id=\"example\"\r\n          readOnly={readOnly}\r\n          readOnlyWriteCheckboxes\r\n          value={value}\r\n          template={template}\r\n          defaultValue={defaultValue}\r\n          scrollTo={window.location.hash}\r\n          handleDOMEvents={{\r\n            focus: () => console.log(\"FOCUS\"),\r\n            blur: () => console.log(\"BLUR\"),\r\n            paste: () => console.log(\"PASTE\"),\r\n            touchstart: () => console.log(\"TOUCH START\"),\r\n          }}\r\n          onSave={options => console.log(\"Save triggered\", options)}\r\n          onCancel={() => console.log(\"Cancel triggered\")}\r\n          onChange={handleChange}\r\n          onClickLink={(href, event) =>\r\n            console.log(\"Clicked link: \", href, event)\r\n          }\r\n          onHoverLink={event => {\r\n            console.log(\"Hovered link: \", event.target.href);\r\n            return false;\r\n          }}\r\n          onClickHashtag={(tag, event) =>\r\n            console.log(\"Clicked hashtag: \", tag, event)\r\n          }\r\n          onSearchLink={async term => {\r\n            console.log(\"Searched link: \", term);\r\n\r\n            // Delay to simulate time taken for remote API request to complete\r\n            return new Promise(resolve => {\r\n              setTimeout(() => {\r\n                resolve(\r\n                  docSearchResults.filter(result =>\r\n                    result.title.toLowerCase().includes(term.toLowerCase())\r\n                  )\r\n                );\r\n              }, Math.random() * 500);\r\n            });\r\n          }}\r\n          dark={dark}\r\n          autoFocus\r\n        />\r\n    </div>\r\n  )\r\n}\r\nexport default FunctionMarkdownEditor;\r\n\r\n// class MarkdownEditor extends Component {\r\n//     state = {\r\n//         readOnly: false,\r\n//         template: false,\r\n//         dark: localStorage.getItem('dark') === \"enabled\",\r\n//         value: undefined\r\n//     }\r\n//     handleToggleReadOnly = () => {\r\n//         setState({ readOnly: !readOnly });\r\n//     };\r\n\r\n//     handleToggleTemplate = () => {\r\n//         setState({ template: !template });\r\n//     };\r\n\r\n//     handleToggleDark = () => {\r\n//         const dark = !dark;\r\n//         document.body.style.background = \"radial-gradient(white 1px, black 1.2px);\";\r\n//         document.body.style.backgroundSize = \"50px 50px\"\r\n//         setState({ dark });\r\n//         localStorage.setItem(\"dark\", dark ? \"enabled\" : \"disabled\");\r\n//     };\r\n//     fullscreeentoggle = () => {\r\n//       if(!document.fullscreenElement) {\r\n//         document.documentElement.requestFullscreen()\r\n//       } else {\r\n//         if( document.exitFullscreen) {\r\n//           document.exitFullscreen();\r\n//         }\r\n//       }\r\n//     }\r\n\r\n//     handleUpdateValue = () => {\r\n//         const existing = localStorage.getItem(\"saved\") || \"\";\r\n//         const value = `${existing}\\n\\nedit!`;\r\n//         localStorage.setItem(\"saved\", value);\r\n\r\n//         setState({ value });\r\n//     };\r\n\r\n//     handleChange = debounce(value => {\r\n//         const text = value();\r\n//         console.log(text);\r\n//         localStorage.setItem(\"saved\", text);\r\n//     }, 250);\r\n//     render() {\r\n//     const { body } = document;\r\n//     if (body) body.style.backgroundColor = dark ? \"#181A1B\" : \"#FFF\";\r\n//     return (\r\n//         <div>\r\n//             <div>\r\n//                 <button type=\"button\" onClick={handleToggleReadOnly}>\r\n//                     {readOnly ?\"Editable\" : \"Read-only\"}\r\n//                 </button>\r\n//                 <button type=\"button\" onClick={handleToggleDark}>\r\n//             {dark ? \"Switch to Light\" : \"Switch to Dark\"}\r\n//           </button>{\" \"}\r\n//           <button type=\"button\" onClick={handleToggleTemplate}>\r\n//             {template ? \"Switch to Document\" : \"Switch to Template\"}\r\n//           </button>{\" \"}\r\n//           <button type=\"button\" onClick={handleUpdateValue}>\r\n//             Update value\r\n//           </button>\r\n//           <button type=\"button\" onClick={fullscreeentoggle}>\r\n//             FullScreen\r\n//           </button>\r\n//           <br/>\r\n//             </div>\r\n//             <Editor\r\n//           id=\"example\"\r\n//           readOnly={readOnly}\r\n//           readOnlyWriteCheckboxes\r\n//           value={value}\r\n//           template={template}\r\n//           defaultValue={defaultValue}\r\n//           scrollTo={window.location.hash}\r\n//           handleDOMEvents={{\r\n//             focus: () => console.log(\"FOCUS\"),\r\n//             blur: () => console.log(\"BLUR\"),\r\n//             paste: () => console.log(\"PASTE\"),\r\n//             touchstart: () => console.log(\"TOUCH START\"),\r\n//           }}\r\n//           onSave={options => console.log(\"Save triggered\", options)}\r\n//           onCancel={() => console.log(\"Cancel triggered\")}\r\n//           onChange={handleChange}\r\n//           onClickLink={(href, event) =>\r\n//             console.log(\"Clicked link: \", href, event)\r\n//           }\r\n//           onHoverLink={event => {\r\n//             console.log(\"Hovered link: \", event.target.href);\r\n//             return false;\r\n//           }}\r\n//           onClickHashtag={(tag, event) =>\r\n//             console.log(\"Clicked hashtag: \", tag, event)\r\n//           }\r\n//           onSearchLink={async term => {\r\n//             console.log(\"Searched link: \", term);\r\n\r\n//             // Delay to simulate time taken for remote API request to complete\r\n//             return new Promise(resolve => {\r\n//               setTimeout(() => {\r\n//                 resolve(\r\n//                   docSearchResults.filter(result =>\r\n//                     result.title.toLowerCase().includes(term.toLowerCase())\r\n//                   )\r\n//                 );\r\n//               }, Math.random() * 500);\r\n//             });\r\n//           }}\r\n//           dark={dark}\r\n//           autoFocus\r\n//         />\r\n//         </div>\r\n//     )}\r\n\r\n// }\r\n// ;","\r\nconst AppReducer=(state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_JOURNAL':\r\n            return {\r\n                ...state,\r\n                journalList: state.journalList.filter(journal => journal.id !== action.payload)\r\n            }\r\n        case 'ADD_JOURNAL':\r\n            return {\r\n                ...state,\r\n                journalList: [action.payload, ...state.journalList]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default AppReducer;","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  journalList: [ ]\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  function deleteJournal(id) {\r\n    dispatch({\r\n      type: 'DELETE_JOURNAL',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addJournal(journal) {\r\n    dispatch({\r\n      type: 'ADD_JOURNAL',\r\n      payload: journal\r\n    });\r\n  }\r\n\r\n  return (<GlobalContext.Provider value={{\r\n    journalList: state.journalList,\r\n    deleteJournal,\r\n    addJournal\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>);\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport _ from \"lodash-es\";\r\nimport * as dayjs from \"dayjs\";\r\nimport \"./forms.css\";\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport MarkdownEditor from './Editor'\r\nimport { GlobalContext } from \"../contexts/globalcontext\";\r\n\r\nexport  const stopWords = [\r\n  \"a\",\r\n  \"about\",\r\n  \"above\",\r\n  \"after\",\r\n  \"again\",\r\n  \"against\",\r\n  \"ain\",\r\n  \"all\",\r\n  \"am\",\r\n  \"an\",\r\n  \"and\",\r\n  \"any\",\r\n  \"are\",\r\n  \"aren\",\r\n  \"aren't\",\r\n  \"as\",\r\n  \"at\",\r\n  \"be\",\r\n  \"because\",\r\n  \"been\",\r\n  \"before\",\r\n  \"being\",\r\n  \"below\",\r\n  \"between\",\r\n  \"both\",\r\n  \"but\",\r\n  \"by\",\r\n  \"can\",\r\n  \"couldn\",\r\n  \"couldn't\",\r\n  \"d\",\r\n  \"did\",\r\n  \"didn\",\r\n  \"didn't\",\r\n  \"do\",\r\n  \"does\",\r\n  \"doesn\",\r\n  \"doesn't\",\r\n  \"doing\",\r\n  \"don\",\r\n  \"don't\",\r\n  \"down\",\r\n  \"during\",\r\n  \"each\",\r\n  \"few\",\r\n  \"for\",\r\n  \"from\",\r\n  \"further\",\r\n  \"had\",\r\n  \"hadn\",\r\n  \"hadn't\",\r\n  \"has\",\r\n  \"hasn\",\r\n  \"hasn't\",\r\n  \"have\",\r\n  \"haven\",\r\n  \"haven't\",\r\n  \"having\",\r\n  \"he\",\r\n  \"her\",\r\n  \"here\",\r\n  \"hers\",\r\n  \"herself\",\r\n  \"him\",\r\n  \"himself\",\r\n  \"his\",\r\n  \"how\",\r\n  \"i\",\r\n  \"if\",\r\n  \"in\",\r\n  \"into\",\r\n  \"is\",\r\n  \"isn\",\r\n  \"isn't\",\r\n  \"it\",\r\n  \"it's\",\r\n  \"its\",\r\n  \"itself\",\r\n  \"just\",\r\n  \"ll\",\r\n  \"m\",\r\n  \"ma\",\r\n  \"me\",\r\n  \"mightn\",\r\n  \"mightn't\",\r\n  \"more\",\r\n  \"most\",\r\n  \"mustn\",\r\n  \"mustn't\",\r\n  \"my\",\r\n  \"myself\",\r\n  \"needn\",\r\n  \"needn't\",\r\n  \"no\",\r\n  \"nor\",\r\n  \"not\",\r\n  \"now\",\r\n  \"o\",\r\n  \"of\",\r\n  \"off\",\r\n  \"on\",\r\n  \"once\",\r\n  \"only\",\r\n  \"or\",\r\n  \"other\",\r\n  \"our\",\r\n  \"ours\",\r\n  \"ourselves\",\r\n  \"out\",\r\n  \"over\",\r\n  \"own\",\r\n  \"re\",\r\n  \"s\",\r\n  \"same\",\r\n  \"shan\",\r\n  \"shan't\",\r\n  \"she\",\r\n  \"she's\",\r\n  \"should\",\r\n  \"should've\",\r\n  \"shouldn\",\r\n  \"shouldn't\",\r\n  \"so\",\r\n  \"some\",\r\n  \"such\",\r\n  \"t\",\r\n  \"than\",\r\n  \"that\",\r\n  \"that'll\",\r\n  \"the\",\r\n  \"their\",\r\n  \"theirs\",\r\n  \"them\",\r\n  \"themselves\",\r\n  \"then\",\r\n  \"there\",\r\n  \"these\",\r\n  \"they\",\r\n  \"this\",\r\n  \"those\",\r\n  \"through\",\r\n  \"to\",\r\n  \"too\",\r\n  \"under\",\r\n  \"until\",\r\n  \"up\",\r\n  \"ve\",\r\n  \"very\",\r\n  \"was\",\r\n  \"wasn\",\r\n  \"wasn't\",\r\n  \"we\",\r\n  \"were\",\r\n  \"weren\",\r\n  \"weren't\",\r\n  \"what\",\r\n  \"when\",\r\n  \"where\",\r\n  \"which\",\r\n  \"while\",\r\n  \"who\",\r\n  \"whom\",\r\n  \"why\",\r\n  \"will\",\r\n  \"with\",\r\n  \"won\",\r\n  \"won't\",\r\n  \"wouldn\",\r\n  \"wouldn't\",\r\n  \"y\",\r\n  \"you\",\r\n  \"you'd\",\r\n  \"you'll\",\r\n  \"you're\",\r\n  \"you've\",\r\n  \"your\",\r\n  \"yours\",\r\n  \"yourself\",\r\n  \"yourselves\",\r\n  \"could\",\r\n  \"he'd\",\r\n  \"he'll\",\r\n  \"he's\",\r\n  \"here's\",\r\n  \"how's\",\r\n  \"i'd\",\r\n  \"i'll\",\r\n  \"i'm\",\r\n  \"i've\",\r\n  \"let's\",\r\n  \"ought\",\r\n  \"she'd\",\r\n  \"she'll\",\r\n  \"that's\",\r\n  \"there's\",\r\n  \"they'd\",\r\n  \"they'll\",\r\n  \"they're\",\r\n  \"they've\",\r\n  \"we'd\",\r\n  \"we'll\",\r\n  \"we're\",\r\n  \"we've\",\r\n  \"what's\",\r\n  \"when's\",\r\n  \"where's\",\r\n  \"who's\",\r\n  \"why's\",\r\n  \"would\",\r\n];\r\n\r\n\r\n\r\nconst ADD_JOURNAL = gql`\r\n  mutation AddJournal($id: ID,$googleId: String){\r\n    addJournal(id: $id, googleId: $googleId ) {\r\n    id \r\n    googleId\r\n  }\r\n  }\r\n`;\r\nconst UPDATE_JOURNAL = gql`\r\n  mutation UpdateJournal($id: String!, $content: String, $count: Float, $completed: Boolean) {\r\n    updateJournal(id: $id, content: $content, count: $count, completed:$completed ){\r\n      content\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst Form = () => {\r\n  const [word, setWord] = useState(\"\");\r\n  const [cleanword, SetCleanedWord] = useState(\"\");\r\n\r\n  const [count, setCount] = useState(0);\r\n  const date = new dayjs();\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  const userProfile = JSON.parse(localStorage.getItem('user'))\r\n\r\n  const rightwords = _.words(word, /\\b[-?(\\w+)?]+\\b/gi)\r\n  // const count = _.words(word, /\\b[-?(\\w+)?]+\\b/gi).length;\r\n\r\n  const wordlimit = 100;\r\n  // const progress = count / wordlimit;\r\n  const sentences = _.words(word, /[.|!|?]/g).length;\r\n\r\n  const [updateJournal] = useMutation(UPDATE_JOURNAL);\r\n  const nonStopWords = [];\r\n  const readabilityScores = []\r\n  // sentiment analysis\r\n  //console.log(keywordsCount);\r\n  const googleId = userProfile.googleId;\r\n  const {journalList} = useContext(GlobalContext);\r\n  console.log(journalList, 'this is the journalist ');\r\n  useEffect(() => {\r\n    if (count >= 1) {\r\n      updateJournal({\r\n        variables: {\r\n          id: journalList[0].id,\r\n          content: \"This is the new Content that i want in the blog\",\r\n          count: 19,\r\n          completed: true\r\n        }\r\n      })\r\n    }\r\n  }, [count]);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", }}>\r\n        <button type=\"button\" onClick={() => setCount(count + 1)}>Increase count</button>\r\n        <div className=\"editorContainer\">\r\n          <MarkdownEditor textValue={word} cleanWord={cleanword} />\r\n        </div>\r\n          <ul style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", justifyContent: \"space-between\" }}>\r\n            {/* {keywords.map((keyword, index) => {\r\n              return (\r\n                <div style={{ border: \"1px solid black\", borderRadius: \"4px\", padding: \"5px\", margin: \"4px\" }}>\r\n                  {keyword}\r\n                </div>\r\n              )\r\n            })} */}\r\n          </ul>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","const AuthReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"LOGIN\": \r\n            localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\r\n            localStorage.setItem(\"token\", JSON.stringify(action.payload.token));\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: action.payload.user,\r\n                token : action.payload.token,\r\n            }\r\n        case \"LOGOUT\": \r\n            localStorage.clear()\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AuthReducer;","import React,{createContext, useReducer} from 'react';\r\nimport AuthReducer from './AuthReducer';\r\n//initial state of Auth\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    token: null,\r\n    user: null,\r\n}\r\n//created context \r\nexport const AuthContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const AuthProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, initialState );\r\n\r\n    //Actions\r\n    function UserLogin(userdata) {\r\n        dispatch({\r\n            type: 'LOGIN',\r\n            payload: userdata\r\n        })\r\n    }\r\n    function UserLogOut() {\r\n        dispatch({\r\n            type: \"LOGOUT\",\r\n            payload: null\r\n        })\r\n    }\r\n\r\n    \r\n    return (\r\n        <AuthContext.Provider\r\n        value={{\r\n            user: state.user,\r\n            token: state.token,\r\n            UserLogin,\r\n            UserLogOut\r\n        }}>\r\n        {children}\r\n    </AuthContext.Provider>\r\n\r\n    )\r\n    \r\n}\r\n","import React, { useContext, useReducer, useState } from 'react';\r\nimport {AuthContext} from '../contexts/AuthContext';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { gql, useMutation } from '@apollo/client';\r\n\r\n\r\nconst GOOGLE_CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID\r\n\r\nconst ADD_USER = gql`\r\n  mutation AddUser($googleId: String!, $displayName: String!, $firstName: String!, $lastName: String!, $image: String! ){\r\n    addUser(googleId: $googleId, displayName: $displayName,firstName: $firstName, lastName: $lastName, image: $image) {\r\n    googleId\r\n    displayName\r\n    firstName\r\n    lastName\r\n    image\r\n  }\r\n  }\r\n`;\r\n\r\nconst LoginPage = () => {\r\n    const {UserLogin} = useContext(AuthContext);\r\n    const history = useHistory();\r\n    const [updateUser] = useMutation(ADD_USER)\r\n\r\n    const responseSuccessGoogle = async (response) => {\r\n        console.log(response)\r\n        const newUser = {\r\n            token: response?.tokenId,\r\n            user: response?.profileObj\r\n        }\r\n        UserLogin(newUser);\r\n        // authContext.isLoggedIn = true\r\n        // authContext.token = response?.tokenId\r\n        // authContext.user = response?.profileObj\r\n        updateUser({variables: {\r\n            googleId: response.profileObj.googleId, \r\n            displayName: response.profileObj.name,\r\n            firstName: response.profileObj.givenName, \r\n            lastName: response.profileObj.familyName, \r\n            image: response.profileObj.imageUrl,\r\n        }})\r\n        history.push('/dashboard')\r\n    }\r\n    const responseErrorGoogle = (res) => {\r\n        console.log(res);\r\n    }   \r\n    const LoggedIn =  localStorage.getItem('user') ? true: false\r\n    return (\r\n        <div>\r\n    <div>\r\n        { !LoggedIn ? <GoogleLogin\r\n            clientId={GOOGLE_CLIENT_ID}\r\n            buttonText=\"Login with google\"\r\n            onSuccess={responseSuccessGoogle}\r\n            onFailure={responseErrorGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n            />\r\n            :\r\n            <Redirect to=\"/dashboard\"></Redirect>\r\n        }\r\n    \r\n        \r\n        </div>\r\n    </div>\r\n    )\r\n        \r\n}\r\n\r\nexport default LoginPage","import React, { useContext, useState } from 'react';\r\nimport { Chrono } from \"react-chrono\";\r\nimport {useQuery, gql} from \"@apollo/client\";\r\nimport MarkdownEditor from '../components/Editor';\r\nimport {debounce} from \"lodash-es\";\r\nimport './Timeline.css'\r\n\r\nimport Editor from 'rich-markdown-editor';\r\nconst GET_JOURNAL = gql`\r\n  query {\r\n  getJournals{\r\n    content\r\n    id\r\n  }\r\n}\r\n`\r\nconst GET_JOURNAL_BY_USER = gql`\r\n  query getJournalByUser($googleId: String!){\r\n      journalsByuser(googleId: $googleId) {\r\n        content\r\n      }\r\n    \r\n  }\r\n`\r\n\r\nconst items = [\r\n    {\r\n      title: \"May 1940\",\r\n      cardTitle: \"Dunkirk\",\r\n      cardSubtitle:\r\n        \"Men of the British Expeditionary Force (BEF) wade out to a destroyer during the evacuation from Dunkirk.\",\r\n      cardDetailedText: `On 10 May 1940, Hitler began his long-awaited offensive in the west by invading neutral Holland and Belgium and attacking northern France. Holland capitulated after only five days of fighting, and the Belgians surrendered on 28 May. With the success of the German ‘Blitzkrieg’, the British Expeditionary Force and French troops were in danger of being cut off and destroyed.`\r\n    },\r\n    \r\n]\r\n\r\nfunction Timeline({googleId}) {\r\n  const [word, setWord] = useState(\"\");\r\n  const [editor, setEditor] = useState(false);\r\n  const user = JSON.parse(localStorage.getItem('user'))\r\n  const userAccount = user.googleId\r\n  console.log(googleId, userAccount, typeof(userAccount), )\r\n  const { loading, error, data } = useQuery(GET_JOURNAL_BY_USER, {\r\n    variables: {\r\n      googleId: userAccount}\r\n  });\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message}`;\r\n  const handleChange = debounce(value => {\r\n    const text = value();\r\n    console.log(text)\r\n    localStorage.setItem(\"saved\", text);\r\n    setWord(text);\r\n  }, 250)\r\n  return (\r\n        <div className=\"container\">\r\n        {console.log(editor)}\r\n        {console.table(data)}\r\n      <div className=\"container\">\r\n        <Editor id=\"example\" autoFocus template=\"Template\"/>\r\n      </div>\r\n        \r\n{/*         \r\n          {console.log(data)}\r\n        {data.getJournals.map((journal) => {\r\n          return (\r\n            <div key={journal.id}>\r\n              <div ></div>\r\n              <div> {journal.count}</div>\r\n              <div> {journal.content}</div>   \r\n              <div> {journal.completed}</div>\r\n            </div>\r\n          )\r\n          \r\n        })}\r\n         */}\r\n      </div>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default Timeline;\r\n\r\n","import React,{Component} from 'react';\r\nimport {VictoryBar,VictoryAxis,VictoryTheme, VictoryChart} from 'victory';\r\n\r\nconst data = [\r\n    {quarter: 1, earnings: 13000},\r\n    {quarter: 2, earnings: 16500},\r\n    {quarter: 3, earnings: 14250},\r\n    {quarter: 4, earnings: 19000}\r\n  ];\r\n\r\nclass Analysis extends Component {\r\nrender() {\r\n    return (\r\n    <div style={{\"width\":\"500px\", height: \"500px\"}}>\r\n        <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n        <VictoryAxis\r\n          // tickValues specifies both the number of ticks and where\r\n          // they are placed on the axis\r\n          tickValues={[1, 2, 3, 4]}\r\n          tickFormat={[\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"]}\r\n        />\r\n        <VictoryAxis\r\n          dependentAxis\r\n          // tickFormat specifies how ticks should be displayed\r\n          tickFormat={(x) => (`$${x / 1000}k`)}\r\n        />\r\n        <VictoryBar\r\n        data={data}\r\n        // data accessor for x values\r\n        x=\"quarter\"\r\n        // data accessor for y values\r\n        y=\"earnings\"\r\n    />\r\n    </VictoryChart>\r\n\r\n    </div>\r\n    \r\n    )\r\n}\r\n};\r\n\r\nexport default Analysis","import React from 'react';\r\nimport \"./WriteOn.css\";\r\n\r\n\r\nconst WriteOn = () => {\r\n    const data = [\r\n        \"Love\",\r\n        \"Friends\",\r\n        \"Relationship\",\r\n        \"Carrer\",\r\n        \"Passion\",\r\n        \"Family\",\r\n        \"Travel\",\r\n        \"Goals\",\r\n        \"Achievement\",\r\n        \"Nature\",\r\n        \"Money\",\r\n        \"Childhood\",\r\n        \"Education\",\r\n        \"Learning\",\r\n        \"Mind\",\r\n        \"Body\",\r\n        \"Stupidity\",\r\n        \"Stories\",\r\n        \"Jokes\",\r\n        \"Me\",\r\n        \"Tension\",\r\n        \"Exams\",\r\n        \"Stress\",\r\n        \"Games\",    \r\n        \"School\",\r\n        \"College\",\r\n        \"Time\",\r\n        \"Soul\",\r\n        \"Ideas\",\r\n        \"College\",\r\n        \"Work\",\r\n        \"Struggle\",\r\n        \"Life\",\r\n    ]\r\n    return (\r\n        <div className=\"writeContainer\"> \r\n            {data.map((name, index) => {\r\n                return (\r\n                    <div key={index} className=\"childContainer\">\r\n                        <div className=\"text\">{name}</div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default WriteOn;","import React, { useContext } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport {useQuery, gql, useMutation} from \"@apollo/client\";\r\nimport * as dayjs from 'dayjs';\r\nimport \"./Dashboard.css\";\r\nimport { GoogleLogout} from 'react-google-login';\r\nimport { GlobalContext } from '../contexts/globalcontext';\r\n\r\n\r\nconst GOOGLE_CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID\r\n\r\nconst GET_JOURNAL_BY_USER = gql`\r\n  query getJournalByUser($googleId: String!){\r\n      journalsByuser(googleId: $googleId) {\r\n        createdAt,\r\n        completed,\r\n        id\r\n      } \r\n  }\r\n`\r\nconst ADD_JOURNAL = gql`\r\n  mutation AddJournal($googleId: String!){\r\n    addJournal(googleId: $googleId ) {\r\n    id \r\n    googleId\r\n    createdAt\r\n  }\r\n  }\r\n`;\r\n\r\n// My query would look like something\r\n// query getdata { user(id: googleid){ complete, createAt}}\r\n//use lodash to sort the data\r\n// then make a list of true and false statements. \r\n\r\n\r\nconst Dashboard = ({googleId}) => {\r\n\r\n    const {UserLogOut} = useContext(AuthContext);\r\n    const {addJournal} = useContext(GlobalContext);\r\n    const userinfo = JSON.parse(localStorage.getItem('user'))\r\n    const userName = userinfo?.name\r\n    const userAccount = userinfo?.googleId\r\n    const userProfile =  userinfo?.imageUrl\r\n    //query\r\n    const { loading, error, data } = useQuery(GET_JOURNAL_BY_USER, {\r\n        variables: {\r\n          googleId: userAccount}\r\n      });\r\n    const LoggedIn =  localStorage.getItem('user') ? true: false\r\n    const Logout = () => {\r\n        console.log(\"log out\")\r\n        UserLogOut();\r\n    }\r\n    //adding a journal\r\n    const history = useHistory();\r\n    const [\r\n        updateJournal,\r\n        {loading: mutationLoading, \r\n        error: mutationError, \r\n        data: mutationData}\r\n    ] = useMutation(ADD_JOURNAL)\r\n    const AddJournal = async () => {\r\n        updateJournal({\r\n            variables: {\r\n                googleId: userAccount\r\n            }\r\n        })\r\n        const data = await mutationData;\r\n        console.log(data, \"this is the data\")\r\n        const journal = {\r\n            id: data?.addJournal.id,\r\n            googleId: data?.addJournal.googleId\r\n        }\r\n        addJournal(journal);\r\n        // // send the mutationData to form and update it\r\n        console.log('added a journal', data?.addJournal.id)\r\n        data ? history.push(\"/form\") : \"data not added\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {LoggedIn ?<div className=\"con\">\r\n                <h1>Dashboard</h1>\r\n                <h2>Hello,{userName}</h2>\r\n                {console.log(data)}\r\n                \r\n                <GoogleLogout\r\n                    clientId= {GOOGLE_CLIENT_ID}\r\n                    buttonText=\"Logout\"\r\n                    onLogoutSuccess={Logout}\r\n                ></GoogleLogout>\r\n                <button type=\"button\" onClick={AddJournal}>New Entry</button>\r\n                <img src={userProfile} alt=\"profileImage\" />\r\n                <div> \r\n                    <h2>UPCOMING FEATURES</h2>\r\n                    <ul>\r\n                        <li> Create your own MileStones </li>\r\n                        <li> How much time you have spend writing your journals</li>\r\n                        <li> How many words you have written</li>\r\n                        <li> What are your favourate words/</li>\r\n                        <li> Make a list of words that you would like to use in your journals</li>\r\n                        \r\n                    </ul> </div>\r\n                <div className=\"dashcontainer\">\r\n                    {data && data.journalsByuser.map((journal, index) => {\r\n                        const date = journal.createdAt\r\n                        return (\r\n                            <div key={index} >\r\n                                <div className={journal.completed ? \"complete\" : \"incomplete\"}></div>\r\n                                <div>{dayjs(date).format(\"DD,MM YYYY\")}</div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div> : <Redirect to=\"/\"></Redirect>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Dashboard;","import { ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'http://localhost:5000/graphql',\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport {client};","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Nav, Anchor} from 'grommet'\r\nimport {\r\n  Home, \r\n  Notification,\r\n  Analytics,\r\n  Login\r\n} from 'grommet-icons';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n      <Nav direction=\"row\" background=\"white\" pad=\"small\" border=\"bottom\">\r\n        <Link to=\"/\">\r\n            <Anchor icon={<Login />} hoverIndicator />\r\n        </Link>\r\n        <Link to=\"/dashboard\">\r\n            <Anchor icon={<Home />} hoverIndicator/>\r\n        </Link>\r\n        <Link to=\"/form\">\r\n            <Anchor icon={<Notification />} hoverIndicator />\r\n        </Link>\r\n        <Link to=\"/analysis\">\r\n            <Anchor icon={<Analytics />} hoverIndicator />\r\n        </Link>\r\n  </Nav>\r\n    )\r\n}\r\n\r\n\r\nexport default NavBar;\r\n\r\n","import React from 'react';\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div>\r\n            Made in India for World\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import './App.css';\r\nimport React from 'react';\r\nimport Form from './components/Form';\r\nimport Login from './Views/Login'\r\nimport {AuthProvider} from './contexts/AuthContext';\r\nimport { GlobalProvider } from './contexts/globalcontext';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport Timeline from './Views/Timeline';\r\nimport Analysis from './Views/Analysis';\r\nimport WriteOn from './Views/WriteOn';\r\nimport Dashboard from './Views/Dashboard';\r\nimport {ApolloProvider} from '@apollo/client';\r\nimport {client} from './contexts/ApolloCient';\r\nimport NavBar from './Nav';\r\nimport Footer from './components/Footer'\r\nimport { Grommet} from 'grommet';\r\nimport MainSidebar from './UI/MainSidebar'\r\n\r\n\r\nfunction App() {  \r\n  return (\r\n  <Grommet>\r\n    \r\n    <div className=\"App\">\r\n      <Router>\r\n      <NavBar/>\r\n      {/* <MainSidebar/> */}\r\n  <ApolloProvider client={client}>\r\n  <AuthProvider>\r\n    <GlobalProvider>\r\n      <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/form\">\r\n            <Form />\r\n          </Route>\r\n          <Route path=\"/timeline\">\r\n            <Timeline/>\r\n          </Route>\r\n          <Route path=\"/analysis\">\r\n            <Analysis/>\r\n          </Route>\r\n          <Route path=\"/writeon\">\r\n            <WriteOn/>\r\n          </Route>\r\n          <Route path=\"/dashboard\">\r\n            <Dashboard/>\r\n          </Route>\r\n        </Switch>\r\n      </GlobalProvider>\r\n    </AuthProvider>\r\n  </ApolloProvider>    \r\n      </Router>\r\n      <Footer />\r\n    </div>\r\n  </Grommet>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}